service: user

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  stage: dev
  environment:
    subpingTable: ${self:custom.stage}-subping-core
    authTable: ${self:custom.stage}-subping-auths
    keyTable: ${self:custom.stage}-subping-keys

package:
  individually: true

iamRoleStatements:
  - Effect: "Allow"
    Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem

    Resource:
      Fn::Join:
        - "Fn::GetAtt": [ AuthsTable, Arn ]
        - "Fn::GetAtt": [ SubpingTable, Arn ]
        - "Fn::GetAtt": [ KeyTable, Arn ]

functions:  
  getAlarm:
    handler: ./handler/alarm/getAlarm.handler
    events:
      - http:
          path: getAlarm
          method: get
          cors: true
          authorizer: aws_iam
  
  readAlarm:
    handler: ./handler/alarm/readAlarm.handler
    events:
      - http:
          path: readAlarm
          method: get
          cors: true
          authorizer: aws_iam
  
  getSubscribe:
    handler: ./handler/subscribe/getSubscribe.handler
    events:
      - http:
          path: getSubscribe
          method: post
          cors: true
          authorizer: aws_iam

  toggleUserLike:
    handler: ./handler/like/toggleUserLike.handler
    events:
      - http:
          path: toggleUserLike
          method: post
          cors: true
          authorizer: aws_iam
  
  getUserLikeServices:
    handler: ./handler/like/getUserLikeServices.handler
    events:
      - http:
          path: getUserLikeServices
          method: get
          cors: true
          authorizer: aws_iam

  getSchedule:
    handler: ./handler/calendar/getSchedule.handler
     
  makeAlarm:
    handler: ./handler/alarm/makeAlarm.handler

  makeSeller:
    handler: ./handler/seller/makeSeller.handler

  makeSubscribe:
    handler: ./handler/subscribe/makeSubscribe.handler
  
  updateSubscribe:
    handler: ./handler/subscribe/updateSubscribe.handler

  duplicateNickName:
    handler: ./handler/nickname/duplicateNickName.handler
    events:
      - http:
          path: duplicateNickName
          method: post
          cors: true
          authorizer: aws_iam

  updateNickName:
    handler: ./handler/nickname/updateNickName.handler
    events:
      - http:
          path: updateNickName
          method: post
          cors: true
          authorizer: aws_iam

  getUserInfo:
    handler: ./handler/user/getUserInfo.handler
    events:
      - http:
          path: getUserInfo
          method: get
          cors: true
          authorizer: aws_iam

  getUserAddresses:
    handler: ./handler/address/getUserAddresses.handler
    events:
      - http:
          path: getUserAddresses
          method: get
          cors: true
          authorizer: aws_iam
  
  makeUserAddress:
    handler: ./handler/address/makeUserAddress.handler
    events:
      - http:
          path: makeUserAddress
          method: post
          cors: true
          authorizer: aws_iam