service: service

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-monorepo

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: yarn

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  stage: dev
  environment:
    subpingTable: ${self:custom.stage}-subping-core
    authTable: ${self:custom.stage}-subping-auths
    keyTable: ${self:custom.stage}-subping-keys

package:
  individually: true

iamRoleStatements:
  - Effect: "Allow"
    Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem

    Resource:
      Fn::Join:
        - "Fn::GetAtt": [ AuthsTable, Arn ]
        - "Fn::GetAtt": [ SubpingTable, Arn ]
        - "Fn::GetAtt": [ KeyTable, Arn ]

functions:
  currentHotChart:
    handler: ./handler/chart/currentHotChart.handler
    events:
      - http:
          path: currentHotChart
          method: post
          cors: true
          authorizer: aws_iam

  cronMakeRank:
    handler: ./handler/chart/cronMakeRank.handler
    events:
      - schedule: cron(0 3,9,15,21 * * ? *)
  
  getServices:
    handler: ./handler/service/getServices.handler
    events:
      - http:
          path: getServices
          method: post
          cors: true
          authorizer: aws_iam

  getService:
    handler: ./handler/service/getService.handler
    events:
      - http:
          path: getService
          method: post
          cors: true
          authorizer: aws_iam

  getCategories:
    handler: ./handler/category/getCategories.handler
    events:
      - http:
          path: getCategories
          method: get
          cors: true
          authorizer: aws_iam
  
  getProducts:
    handler: ./handler/product/getProducts.handler
    events:
      - http:
          path: getProducts
          method: post
          cors: true
          authorizer: aws_iam

  makeCategory:
    handler: ./handler/category/makeCategory.handler

  makeService:
    handler: ./handler/service/makeService.handler

  makeProduct:
    handler: ./handler/product/makeProduct.handler

  autoComplete:
    handler: ./handler/search/autoComplete.handler
    events:
      - http:
          path: autoComplete
          method: post
          cors: true
          authorizer: aws_iam

  search:
    handler: ./handler/search/search.handler
    events:
      - http:
          path: search
          method: post
          cors: true
          authorizer: aws_iam

  makeReview:
    handler: ./handler/review/makeReview.handler
    events:
      - http:
          path: makeReview
          method: post
          cors: true
          authorizer: aws_iam
 
  getReviews:
    handler: ./handler/review/getReviews.handler
    events:
      - http:
          path: getReviews
          method: post
          cors: true
          authorizer: aws_iam

  editReview:
    handler: ./handler/review/editReview.handler
    events:
      - http:
          path: editReview
          method: post
          cors: true
          authorizer: aws_iam

  deleteReview:
    handler: ./handler/review/deleteReview.handler
    events:
      - http:
          path: deleteReview
          method: post
          cors: true
          authorizer: aws_iam

  getRecentReviews:
    handler: ./handler/review/getRecentReviews.handler
    events:
      - http:
        path: getRecentReviews
        method: post
        cors: true
        authorizer: aws_iam

  backup:
    handler: ./handler/backup/backup.handler